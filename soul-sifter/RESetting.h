//
//  RESetting.h
//  soul-sifter
//
//  Created by Robby Neale
//  Generated by generate_model.rb
//

#ifndef __soul_sifter__RESetting__
#define __soul_sifter__RESetting__

#include <string>
#include <vector>


namespace sql {
    class ResultSet;
}

using namespace std;

namespace soulsifter {

    class RESetting {
    public:
        RESetting();
        explicit RESetting(const RESetting& reSetting);
        void operator=(const RESetting& reSetting);
        ~RESetting();
        void clear();

        static RESetting* findById(int id);
        static RESetting* findByName(const string& name);

        bool sync();
        int update();
        int save();

        static void findAll(vector<const RESetting*>* settings);

        string& getValueRef();

        const int getId() const;
        void setId(int id);
        const string& getName() const;
        void setName(const string& name);
        const string& getValue() const;
        void setValue(const string& value);

    private:
        int id;
        string name;
        string value;

        static void populateFields(const sql::ResultSet* rs, RESetting* reSetting);
    };

}

#endif /* defined(__soul_sifter__RESetting__) */
