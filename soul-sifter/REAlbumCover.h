//
//  REAlbumCover.h
//  soul-sifter
//
//  Created by Robby Neale
//  Generated by generate_model.rb
//

#ifndef __soul_sifter__REAlbumCover__
#define __soul_sifter__REAlbumCover__

#include <string>
#include <vector>


namespace sql {
    class ResultSet;
}

using namespace std;

namespace soulsifter {

    class REAlbumCover {
    public:
        REAlbumCover();
        explicit REAlbumCover(const REAlbumCover& reAlbumCover);
        void operator=(const REAlbumCover& reAlbumCover);
        ~REAlbumCover();
        void clear();

        static REAlbumCover* findById(int id);
        static REAlbumCover* findByREId(const string& reId);

        bool sync();
        int update();
        int save();

        class REAlbumCoverIterator {
        public:
            explicit REAlbumCoverIterator(sql::ResultSet* resultset);
            ~REAlbumCoverIterator();

            bool next(REAlbumCover* albumcover);

        private:
            sql::ResultSet* rs;

            REAlbumCoverIterator();
        };

        static REAlbumCoverIterator* findAll();

        const int getId() const;
        void setId(int id);
        const string& getREId() const;
        void setREId(const string& reId);
        const string& getThumbnail() const;
        void setThumbnail(const string& thumbnail);

    private:
        int id;
        string reId;
        string thumbnail;

        static void populateFields(const sql::ResultSet* rs, REAlbumCover* reAlbumCover);
    };

}

#endif /* defined(__soul_sifter__REAlbumCover__) */
